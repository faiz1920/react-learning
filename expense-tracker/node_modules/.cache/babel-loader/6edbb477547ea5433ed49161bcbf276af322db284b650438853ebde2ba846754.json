{"ast":null,"code":"var _jsxFileName = \"/Users/faizansari/KryoTek Systems/react/react-learning/src/components/NewExpense/ExpenseForm.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport \"./ExpenseForm.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExpenseForm = () => {\n  _s();\n  /**\n   * multiple useState can be used to handle states of multiple variables.\n   * each variable state can be updated individually\n   */\n  const [title, setTitle] = useState(\"\");\n  const [amount, setAmount] = useState(\"\");\n  const [date, setDate] = useState(\"\");\n\n  /**\n   * single useState can be used to handle the state of multiple varibales as an object\n   * all variables in object need to update all variables\n   */\n  //   const [userInput, setUserInput] = useState({\n  //     title: \"\",\n  //     amount: \"\",\n  //     date: \"\",\n  //   });\n\n  const titleHandler = event => {\n    console.log(event.target.value);\n    setTitle(event.target.value);\n\n    /** #first approach **/\n    // setUserInput({ ...userInput, title: event.target.value });\n\n    /**\n     * #second approach\n     * react schedules the state updates, does't perform instantly\n     * so using #first approach may result in outdate or incorrect states\n     * in #second approach react guarantee the states will be the latest state snapshot\n     */\n    // setUserInput((...prevState) => {\n    //   return { ...prevState, title: event.target.value };\n    // });\n  };\n\n  const amountHandler = event => {\n    setAmount(event.target.value);\n    // setUserInput({ ...userInput, amount: event.target.value });\n  };\n\n  const dateHandler = event => {\n    setDate(event.target.value);\n    // setUserInput({ ...userInput, date: event.target.value });\n  };\n\n  /**\n   * shared change event handler\n   */\n  const inputChangeHandler = (identifier, value) => {\n    if (identifier === \"title\") {\n      setTitle(value);\n    } else if (identifier === \"date\") {\n      setDate(value);\n    } else {\n      setAmount(value);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-expense__controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: event => inputChangeHandler(\"title\", event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          min: \"0.01\",\n          step: \"0.01\",\n          onChange: amountHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          min: \"2020-01-01\",\n          max: \"2023-12-31\",\n          onChange: dateHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-expense__actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Expense\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(ExpenseForm, \"DE/pEwXzv6vwqTOQLQjNYH/YZbk=\");\n_c = ExpenseForm;\nexport default ExpenseForm;\nvar _c;\n$RefreshReg$(_c, \"ExpenseForm\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","ExpenseForm","_s","title","setTitle","amount","setAmount","date","setDate","titleHandler","event","console","log","target","value","amountHandler","dateHandler","inputChangeHandler","identifier","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","min","step","max","_c","$RefreshReg$"],"sources":["/Users/faizansari/KryoTek Systems/react/react-learning/src/components/NewExpense/ExpenseForm.js"],"sourcesContent":["import { useState } from \"react\";\nimport \"./ExpenseForm.css\";\n\nconst ExpenseForm = () => {\n  /**\n   * multiple useState can be used to handle states of multiple variables.\n   * each variable state can be updated individually\n   */\n  const [title, setTitle] = useState(\"\");\n  const [amount, setAmount] = useState(\"\");\n  const [date, setDate] = useState(\"\");\n\n  /**\n   * single useState can be used to handle the state of multiple varibales as an object\n   * all variables in object need to update all variables\n   */\n  //   const [userInput, setUserInput] = useState({\n  //     title: \"\",\n  //     amount: \"\",\n  //     date: \"\",\n  //   });\n\n  const titleHandler = (event) => {\n    console.log(event.target.value);\n    setTitle(event.target.value);\n\n    /** #first approach **/\n    // setUserInput({ ...userInput, title: event.target.value });\n\n    /**\n     * #second approach\n     * react schedules the state updates, does't perform instantly\n     * so using #first approach may result in outdate or incorrect states\n     * in #second approach react guarantee the states will be the latest state snapshot\n     */\n    // setUserInput((...prevState) => {\n    //   return { ...prevState, title: event.target.value };\n    // });\n  };\n\n  const amountHandler = (event) => {\n    setAmount(event.target.value);\n    // setUserInput({ ...userInput, amount: event.target.value });\n  };\n\n  const dateHandler = (event) => {\n    setDate(event.target.value);\n    // setUserInput({ ...userInput, date: event.target.value });\n  };\n\n  /**\n   * shared change event handler\n   */\n  const inputChangeHandler = (identifier, value) => {\n    if (identifier === \"title\") {\n      setTitle(value);\n    } else if (identifier === \"date\") {\n      setDate(value);\n    } else {\n      setAmount(value);\n    }\n  };\n\n  return (\n    <form>\n      <div className=\"new-expense__controls\">\n        <div className=\"new-expense__control\">\n          <label>Title</label>\n          <input type=\"text\" onChange={(event) => inputChangeHandler(\"title\", event.target.value)} />\n        </div>\n        <div className=\"new-expense__control\">\n          <label>Amount</label>\n          <input type=\"number\" min=\"0.01\" step=\"0.01\" onChange={amountHandler} />\n        </div>\n        <div className=\"new-expense__control\">\n          <label>Date</label>\n          <input type=\"date\" min=\"2020-01-01\" max=\"2023-12-31\" onChange={dateHandler} />\n        </div>\n      </div>\n      <div className=\"new-expense__actions\">\n        <button type=\"submit\">Add Expense</button>\n      </div>\n    </form>\n  );\n};\n\nexport default ExpenseForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}